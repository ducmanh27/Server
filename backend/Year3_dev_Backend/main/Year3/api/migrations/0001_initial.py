# Generated by Django 4.1.1 on 2024-04-14 07:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AqiRef',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('aqi', models.IntegerField(db_column='aqi', null=True)),
                ('pm25', models.IntegerField(db_column='pm25', null=True)),
                ('pm10', models.IntegerField(db_column='pm10', null=True)),
                ('o3', models.IntegerField(db_column='o3', null=True)),
                ('no2', models.IntegerField(db_column='no2', null=True)),
                ('so2', models.IntegerField(db_column='so2', null=True)),
                ('co', models.IntegerField(db_column='co', null=True)),
                ('t', models.IntegerField(db_column='t', null=True)),
                ('p', models.IntegerField(db_column='p', null=True)),
                ('h', models.IntegerField(db_column='h', null=True)),
                ('w', models.IntegerField(db_column='w', null=True)),
                ('time', models.BigIntegerField(db_column='time', null=True)),
                ('dew', models.IntegerField(db_column='dew', null=True)),
                ('wg', models.IntegerField(db_column='wg', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NodeConfigBuffer',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('action', models.IntegerField(db_column='action')),
                ('mac', models.TextField(db_column='mac')),
                ('room_id', models.IntegerField(db_column='room_id')),
                ('time', models.BigIntegerField(db_column='time')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('room_id', models.IntegerField(db_column='room_id', unique=True)),
                ('construction_name', models.TextField(db_column='construction_name')),
                ('x_length', models.IntegerField(db_column='x_length')),
                ('y_length', models.IntegerField(db_column='y_length')),
                ('information', models.TextField(db_column='information')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('timezone', models.CharField(max_length=255)),
                ('timezone_offset', models.IntegerField()),
                ('current_dt', models.BigIntegerField()),
                ('current_sunrise', models.BigIntegerField()),
                ('current_sunset', models.BigIntegerField()),
                ('current_temp', models.FloatField()),
                ('current_feels_like', models.FloatField()),
                ('current_pressure', models.IntegerField()),
                ('current_humidity', models.IntegerField()),
                ('current_dew_point', models.FloatField()),
                ('current_uvi', models.FloatField()),
                ('current_clouds', models.IntegerField()),
                ('current_visibility', models.IntegerField()),
                ('current_wind_speed', models.FloatField()),
                ('current_wind_deg', models.IntegerField()),
                ('current_wind_gust', models.FloatField(blank=True, null=True)),
                ('current_weather', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='SetTimerHistory',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('time', models.BigIntegerField(db_column='time')),
                ('timer', models.IntegerField(db_column='timer')),
                ('temperature', models.IntegerField(db_column='temperature')),
                ('status', models.IntegerField(db_column='status')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', verbose_name='Refering to room that this is trying to set timer value for')),
            ],
        ),
        migrations.CreateModel(
            name='SensorMonitor',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id')),
                ('co2', models.SmallIntegerField(db_column='co2', null=True)),
                ('temp', models.FloatField(db_column='temp', null=True)),
                ('hum', models.FloatField(db_column='hum', null=True)),
                ('light', models.FloatField(db_column='light', null=True)),
                ('dust', models.FloatField(db_column='dust', null=True)),
                ('sound', models.FloatField(db_column='sound', null=True)),
                ('red', models.SmallIntegerField(db_column='red', null=True)),
                ('green', models.SmallIntegerField(db_column='green', null=True)),
                ('blue', models.SmallIntegerField(db_column='blue', null=True)),
                ('tvoc', models.SmallIntegerField(db_column='tvoc', null=True)),
                ('motion', models.SmallIntegerField(db_column='motion', null=True)),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id')),
                ('x_axis', models.IntegerField(db_column='x_axis')),
                ('y_axis', models.IntegerField(db_column='y_axis')),
                ('function', models.TextField(db_column='function')),
                ('mac', models.TextField(db_column='mac')),
                ('status', models.TextField(db_column='status')),
                ('aim', models.TextField(db_column='aim', null=True)),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
        migrations.CreateModel(
            name='RawSensorMonitor',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id')),
                ('co2', models.SmallIntegerField(db_column='co2', null=True)),
                ('temp', models.FloatField(db_column='temp', null=True)),
                ('hum', models.FloatField(db_column='hum', null=True)),
                ('light', models.FloatField(db_column='light', null=True)),
                ('dust', models.FloatField(db_column='dust', null=True)),
                ('sound', models.FloatField(db_column='sound', null=True)),
                ('red', models.SmallIntegerField(db_column='red', null=True)),
                ('green', models.SmallIntegerField(db_column='green', null=True)),
                ('blue', models.SmallIntegerField(db_column='blue', null=True)),
                ('tvoc', models.SmallIntegerField(db_column='tvoc', null=True)),
                ('motion', models.SmallIntegerField(db_column='motion', null=True)),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
        migrations.CreateModel(
            name='RawActuatorMonitor',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id')),
                ('device_type', models.TextField(db_column='device_type')),
                ('speed', models.SmallIntegerField(db_column='speed')),
                ('temp', models.SmallIntegerField(db_column='temp')),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('ip', models.TextField(db_column='ip', unique=True)),
                ('status', models.TextField(db_column='status')),
                ('error', models.TextField(db_column='error')),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id', null=True)),
                ('voltage', models.FloatField(db_column='voltage', null=True)),
                ('current', models.FloatField(db_column='current', null=True)),
                ('active_power', models.FloatField(db_column='active_power', null=True)),
                ('power_factor', models.FloatField(db_column='power_factor', null=True)),
                ('frequency', models.FloatField(db_column='frequency', null=True)),
                ('active_energy', models.FloatField(db_column='active_energy', null=True)),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
        migrations.CreateModel(
            name='ControlSetpoint',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id', null=True)),
                ('device_type', models.TextField(db_column='device_type', null=True)),
                ('power', models.IntegerField(db_column='power', null=True)),
                ('temp', models.IntegerField(db_column='temp', null=True)),
                ('start_time', models.BigIntegerField(db_column='start_time', null=True)),
                ('end_time', models.BigIntegerField(db_column='end_time', null=True)),
                ('status', models.IntegerField(db_column='status', null=True)),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', verbose_name='Refering to room that this is trying to set value for')),
            ],
        ),
        migrations.CreateModel(
            name='ActuatorMonitor',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('node_id', models.IntegerField(db_column='node_id')),
                ('device_type', models.TextField(db_column='device_type')),
                ('speed', models.SmallIntegerField(db_column='speed')),
                ('temp', models.SmallIntegerField(db_column='temp')),
                ('time', models.BigIntegerField(db_column='time')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.room', to_field='room_id', verbose_name='Refering to id of room where this node is implemented')),
            ],
        ),
    ]
